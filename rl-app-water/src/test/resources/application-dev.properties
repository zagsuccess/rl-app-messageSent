# Development environment configuration 开发环境

###### 数据库配置 ########
spring.datasource.url=jdbc:mysql://10.0.6.106:3306/test?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=5000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#eureka配置
spring.application.name=rl-template-service-test
eureka.client.service-url.defaultZone = http://10.0.6.107:1111/eureka
#注册时使用ip而不是主机名，实际开发中，改成其他模块可访问的IP
#一般其他模块调用服务都是通过hostname来访问的
eureka.instance.hostname=127.0.0.1
#指定此实例注册到eureka的ip
eureka.instance.ip-address=${eureka.instance.hostname:${spring.cloud.client.ipAddress}}}
#优先使用eureka.instance.ip-address
eureka.instance.instance-id=${eureka.instance.ip-address:${spring.cloud.client.ipAddress}}:${spring.application.name}:${server.port}
# feign配置
#请求处理的超时时间
ribbon.ReadTimeout= 30000
#请求连接的超时时间
ribbon.ConnectTimeout= 30000

